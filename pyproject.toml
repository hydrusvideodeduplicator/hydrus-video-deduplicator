[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hydrusvideodeduplicator"
dynamic = ["version"]
description = "Video deduplicator utility for Hydrus Network"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "hydrusvideodeduplicator", email = "hydrusvideodeduplicator@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
    "platformdirs",
    "rich",
    "numpy",
    "tqdm",
    "python-dotenv",
    "typer",
    "requests",
    "psutil",
    "joblib>=1.4",
    # Below is for vpdqpy
    "pillow",
    "av",
]

[project.urls]
Documentation = "https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator#readme"
Issues = "https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator/issues"
Source = "https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator"

[tool.hatch.build]
exclude = [
  "/.*",
  "/docs",
  "/tests",
]

[tool.hatch.version]
path = "src/hydrusvideodeduplicator/__about__.py"

# Benchmark environment

[tool.hatch.envs.benchmark]
dependencies = [
    "pytest",
    "pytest-benchmark",
]

[tool.hatch.envs.benchmark.scripts]
# pytest-benchmark is a plugin for pytest that allows for benchmarking
vpdq = "python -m pytest tests/test_benchmark_vpdqpy.py {args}"

# Docs environment

[tool.hatch.envs.docs]
skip-install = true # Don't install dedupe. We just need to generate docs.
dependencies = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-git-revision-date-localized-plugin",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve"
gh-deploy = "mkdocs gh-deploy --force --strict --config-file mkdocs-gh-pages.yml" # Deploys to Github pages. Only used by GH Actions.

# Test environment

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "vcrpy", # for replaying saved api requests/responses
]

[tool.hatch.envs.test.scripts]
all = "python -m pytest tests/test_db.py src/hydrusvideodeduplicator/pdqhashing/tests tests/test_dedupe.py tests/test_vpdqpy.py --verbose {args}" # TODO: add back `tests/test_main_vcr.py`, see https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator/issues/69
pdq = "python -m pytest src/hydrusvideodeduplicator/pdqhashing/tests --verbose {args}"
db = "python -m pytest tests/test_db.py --verbose {args}"
vcr = "python -m pytest tests/test_main_vcr.py --verbose {args}"

# Format environment

[tool.hatch.envs.format]
skip-install = true # Don't install dedupe. We just need to format.
dependencies = [
  "black",
]

[tool.hatch.envs.format.scripts]
format = "black src tests {args}"

# Lint environment

[tool.hatch.envs.lint]
dependencies = [
  "black",
  "ruff",
]

[tool.hatch.envs.lint.scripts]
format = "black --check src tests {args}"
lint = "ruff check src tests {args}"

[tool.black]
target-version = ["py310", "py311", "py312", "py313"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "ThreatExchange",
]
lint.per-file-ignores = {"tests/**/*" = ["PLR2004", "S101", "TID252"]}

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version = "py312"
