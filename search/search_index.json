{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hydrus Video Deduplicator finds potential duplicate videos through the Hydrus API and marks them as potential duplicates to allow manual filtering through the Hydrus Client GUI.</p> <p>Hydrus Video Deduplicator does not modify your files. It only marks videos as <code>potential duplicates</code> through the Hydrus API so that you can personally filter them in the duplicates processing page.</p> <p>See the Hydrus documentation for how duplicates are managed in Hydrus.</p> <p>See the Theory for an in-depth explanation for how it all works.</p>"},{"location":"contact/","title":"Contact","text":"<p>Create an issue on GitHub for any problems/concerns. Provide as much detail as possible in your issue.</p> <p>Email <code>hydrusvideodeduplicator@gmail.com</code> for other general questions/concerns.</p> <p>Message <code>@applenanner</code> on the Hydrus Discord for other general questions/concerns.</p>"},{"location":"credits/","title":"Credits","text":"<p>Hydrus Network (DWTFYWTPL) by Hydrus dev</p> <p>Hydrus API Library (GNU AGPLv3) by cryzed</p> <p>pdq (BSD) by Meta</p> <p>vpdq (BSD) by Meta</p> <p>Big Buck Bunny, Sintel  (CC BY 3.0) clips by Blender Foundation</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#setup","title":"Setup","text":"<p>Hatch is the Python project manager for this project.</p> <p>It is used for packaging and environment management for development.</p> <p>There are hatch commands for this project are defined in the [pyproject.toml]. They are just aliases for other commands that run in specific environments.</p> <p>For example, to run the command to generate the documentation and serve it locally:</p> <pre><code>hatch run docs:serve\n</code></pre> <p><code>docs</code> is the environment and <code>build</code> is the command to run.</p> <p>For more information, see the Hatch environment documentation</p>"},{"location":"development/#useful-commands","title":"Useful commands","text":"<p>Run all tests:</p> <pre><code>hatch run test:all\n</code></pre> <p>Serve documentation locally:</p> <pre><code>hatch run docs:serve\n</code></pre> <p>Build documentation:</p> <pre><code>hatch run docs:build\n</code></pre> <p>Check code formatting (doesn't actually run formatting):</p> <pre><code>hatch run lint:format\n</code></pre> <p>Lint code:</p> <pre><code>hatch run lint:lint\n</code></pre> <p>Format code:</p> <pre><code>hatch run format:format\n</code></pre> <p>Benchmark vpdq:</p> <pre><code>hatch run benchmark:vpdq\n</code></pre>"},{"location":"development/#developing-without-hatch-not-recommended","title":"Developing without Hatch (not recommended)","text":"<p>Alternatively, if you don't want to use hatch and you know what you're doing, you can install and do development the general way.</p> <ol> <li> <p>Clone or download the repository:</p> <pre><code>git clone https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator.git\n</code></pre> </li> <li> <p>Install local editable package with uv:</p> <pre><code>cd hydrus-video-deduplicator\npip install uv\nuv venv\nsource .venv/bin/activate # or .venv\\Scripts\\activate on Windows\nuv pip install -e .\n</code></pre> </li> <li> <p>Now if you run <code>python -m hydrusvideodeduplicator</code> there should be no errors.</p> </li> </ol>"},{"location":"development/#testing","title":"Testing","text":""},{"location":"development/#testdb","title":"testdb","text":"<p>testdb is a submodule that contains the Hydrus DB and videos for integration testing purposes.</p> <p>It is a submodule to avoid bloating this repo with large media files used for testing.</p> <p>To checkout the testdb submodule:</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>Run tests with <code>hatch run test:all</code></p> <p>TODO: Explain how to run Hydrus using this DB.</p>"},{"location":"development/#git-workflow","title":"git workflow","text":"<p><code>main</code> is for releases. It must be committed to through a PR from <code>develop</code> by the project maintainer.</p> <p><code>develop</code> should have the same history as main unless it has newer commits that have not been merged. When a PR is approved to develop, changes should be squash-merged.</p> <p>Create PRs for <code>develop</code> if you want to submit changes.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-to-update","title":"How to update","text":"<p>I highly recommend backing up your dedupe database folder if it took a long time to hash/search your Hydrus files.</p> <p>I will do my best to preserve your database across upgrades, but there are no guarantees. Just back it up.</p> <p>See How to backup my dedupe database for instructions on backups.</p> <p>To upgrade:</p>"},{"location":"faq/#windows","title":"Windows","text":"<p>Download the latest release directly from the github releases page.</p>"},{"location":"faq/#linux-and-macos","title":"Linux and macOS","text":"<pre><code># activate your venv first, e.g., source .venv/bin/activate\n# if you aren't using uv, omit it from the command below.\nuv pip install hydrusvideodeduplicator --upgrade\n</code></pre>"},{"location":"faq/#can-i-safely-cancel-a-dedupe-in-progress","title":"Can I safely cancel a dedupe in progress?","text":"<p>Yes. You can safely skip any or all of the dedupe steps in progress by pressing <code>CTRL+C</code>. The next time you launch the program it will continue where you left off.</p>"},{"location":"faq/#how-to-backup-my-dedupe-database","title":"How to backup my dedupe database?","text":"<p>You can backup your dedupe database by copying the database directory somewhere safe.</p> <p>See Where are the video hashes stored? location for the database directory.</p>"},{"location":"faq/#how-does-this-work","title":"How does this work?","text":"<ol> <li> <p>First, the program will perceptually hash all your video files and store them in a database.</p> <ul> <li>Initial hashing generally takes longer than searching for duplicates. It will also probably get slower as it progresses, because they are hashed in order of increasing file size.</li> </ul> </li> <li> <p>Then, the perceptual hashes are put into a data structure to make it fast to search for duplicates.</p> <ul> <li>Note: Initial search tree building may take a while, but it should be very fast on subsequent runs when new files are added.</li> </ul> </li> <li> <p>Finally, it will search the database for potential duplicates and mark them as potential duplicates in Hydrus.</p> </li> </ol> <p>You can run the program again when you add more files to find more duplicates.</p> <p>See the Theory for an in-depth explanation for how it all works.</p> <p>Note: You can skip any of the steps to find duplicates for only a few videos at a time. The next time you launch the program it will continue where you left off.</p>"},{"location":"faq/#where-are-the-video-hashes-stored","title":"Where are the video hashes stored?","text":"<p>Hashes are stored in an sqlite database created in an app dir to speed up processing on subsequent runs.</p> <p>On Linux, this directory is likely <code>~/.local/share/hydrusvideodeduplicator</code></p> <p>On Windows, this directory is likely <code>%USERPROFILE%\\AppData\\Local\\hydrusvideodeduplicator</code> or <code>%USERPROFILE%\\AppData\\Roaming\\hydrusvideodeduplicator</code></p> <p>On macos, this directory is likely <code>/Users/&lt;yourusername&gt;/Library/Application Support/hydrusvideodeduplicator</code></p> <p>The database directory can be set with the <code>--dedup-database-dir</code> CLI option, or a <code>DEDUP_DATABASE_DIR</code> environment variable.</p>"},{"location":"faq/#i-have-a-big-library-how-do-i-test-this-on-just-a-few-files","title":"I have a big library. How do I test this on just a few files?","text":"<p>You can use system predicates and queries to limit your search.</p> <p>Each query will reduce the number of files you process. By default all videos/animated are processed.</p> <p>For example:</p> <p>You want to deduplicate files with these requirements:</p> <ul> <li> <p>Max of 1000 files</p> </li> <li> <p>&lt;50 MB filesize</p> </li> <li> <p>In <code>system:archive</code></p> </li> <li> <p>Has the tags <code>character:jacob</code></p> </li> <li> <p>Imported &lt; 1 hour ago</p> </li> </ul> <p>Then the arguments for the query would be:</p> <p><code>--query=\"system:filesize &gt; 10MB\" --query=\"system:limit 1000\" --query=\"system:archive\" --query=\"character:jacob\" --query=\"system:import time &lt; 1 hour\"</code></p> <p>These are the same queries as would be used in Hydrus.</p>"},{"location":"faq/#i-want-to-search-for-duplicates-without-hashing-new-video-files","title":"I want to search for duplicates without hashing new video files","text":"<p>You can either use <code>--skip-hashing</code>, press CTRL+C while perceptual hashing is running, or use a query limiting when files were imported.</p> Example query that limits import time <pre><code>--query=\"system:import time &gt; 1 day\"\n</code></pre>"},{"location":"faq/#what-kind-of-files-does-it-support","title":"What kind of files does it support?","text":"<p>Almost all video and animated files e.g. mp4, gif, apng, etc. are supported if they are supported in Hydrus.</p> <p>If you find a video that fails to perceptually hash, please create an issue on GitHub with some information about the video or message <code>@applenanner</code> on the Hydrus Discord.</p> <p>If a bad file crashes the whole program also create an issue. Skipping files is fine, but crashing is not.</p>"},{"location":"faq/#why-does-processing-slow-down-the-longer-it-runs","title":"Why does processing slow down the longer it runs?","text":"<p>The files are retrieved from Hydrus in increasing file size order. Naturally, this would also affect searching because the database is also ordered.</p> <p>If this is an issue for you and think this should be changed, please create an issue and explain why.</p>"},{"location":"faq/#i-set-the-threshold-too-low-and-now-i-have-too-many-potential-duplicates","title":"I set the threshold too low and now I have too many potential duplicates","text":"<p>While the perceptual hasher should have very few false-positives, you may accidently get too many if you change your search threshold too low using <code>--threshold</code>.</p> <p>You can reset your potential duplicates in Hydrus in duplicates processing:</p> <p></p> <p>Then, you should also reset your search cache with <code>--clear-search-cache</code> to search for duplicates from scratch.</p>"},{"location":"faq/#my-file-failed-to-hash","title":"My file failed to hash","text":"<p>If you find a video that fails to perceptually hash, please create an issue on GitHub with some information about the video or message <code>@applenanner</code> on the Hydrus Discord.</p>"},{"location":"faq/#i-have-some-weird-messages-while-perceptual-hashing","title":"I have some \"weird\" messages while perceptual hashing","text":"<p>If you get messages like this:</p> <p>VPS 0 does not exist</p> <p>SPS 0 does not exist.</p> <p>or</p> <p>deprecated pixel format used, make sure you did set range correctly</p> <p>Don't worry. These are FFmpeg logs from file decoding. They can be safely ignored.</p> <p>These messages are prevalent  with certain video codecs, namely AV1 and H.265.</p> <p>Unfortunately these obnoxious messages are not able to be silenced yet.</p> <p>But if your messages mention perceptual hashing failing then see My file failed to hash.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#windows","title":"Windows","text":"<p>For Windows, you can get the latest release directly from the github releases page.</p> <p>You should now be good to go. Proceed to usage.</p>"},{"location":"installation/#linux","title":"Linux","text":"<p>The following instructions are written for Ubuntu, but should be similar for most distros.</p> <p>Note: uv is the preferred package manager instead of pip for a development install due to its speed and ease of use. If it isn't supported by your distribution or you are using another OS like FreeBSD, then follow the steps below but use the usual Python venv and pip instead of uv.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<ul> <li>Python &gt;=3.10</li> </ul>"},{"location":"installation/#steps","title":"Steps","text":"<ol> <li> <p>Update system packages:</p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade\n</code></pre> </li> <li> <p>Install system dependencies (just pip):</p> <pre><code>sudo apt-get install -y python3-pip\n</code></pre> </li> <li> <p>Create and activate a virtual environment:</p> <pre><code>pip install uv \nuv venv # Create a virtual environment somewhere to avoid system dependency conflicts\n.venv/bin/activate # Activate the virtual environment (run the command uv suggests after running uv venv)\n</code></pre> </li> <li> <p>Install the program:</p> <pre><code>uv pip install hydrusvideodeduplicator\n</code></pre> </li> </ol> <p>You should now be good to go. Proceed to usage.</p> <p>Note: Any time you want to run the program again you will have to run the command to activate the virtual environment first.</p>"},{"location":"installation/#macos","title":"macos","text":"<p>Same directions as Linux but using your preferred package manager for system dependencies e.g. brew.</p>"},{"location":"theory/","title":"Theory","text":"<ol> <li> <p>First, video files are perceptually hashed. These perceptual hashes are cached in a local database.</p> </li> <li> <p>Then, a similarity search cache is built using the perceptual hashes to make it possible to compare video similarities very quickly.</p> </li> <li> <p>Finally, the search cache is queried for a given relative similarity threshold, and video pairs that exceed that that threshold will be marked as potential duplicates in Hydrus via the Hydrus Client API.</p> </li> </ol>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#creating-a-hydrus-api-key","title":"Creating a Hydrus API Key","text":"<ol> <li> <p>Enable the Hydrus Client API service. Ensure <code>use https</code> is enabled for the client api service.</p> <ul> <li> <p>If you need http for some reason instead of https, you must specify your Hydrus API URL directly with <code>--api-url</code></p> <ul> <li>Ex. <code>python -m hydrusvideodeduplicator --api-url=http://localhost:45869</code></li> </ul> </li> <li> <p>Enable <code>allow non-local connections</code> in <code>manage services-&gt;client api</code> if you are running under Windows Subsystem for Linux, or the connection will fail.</p> </li> <li> <p>\u26a0\ufe0f For https, SSL cert is not verified by default unless you enter the cert's file path with <code>--verify-cert</code></p> </li> </ul> </li> <li> <p>Create a client api service key with <code>permits everything</code> enabled.</p> <ul> <li>Do NOT set blacklist/whitelist filters for the API token.</li> </ul> </li> </ol> <p>Example: The API key should look something vaguely like <code>78d2fcc9fe1f43c5008959ed1abfe38ffedcfa127d4f051a1038e068d3e32656</code></p> <p>Note: You will need this API key in the next step, so you should probably copy this API key to your clipboard.</p> <p>After getting your API key, continue to Running Video Dedupe.</p>"},{"location":"usage/#running-video-dedupe","title":"Running Video Dedupe","text":"Windows   Run hydrusvideodeduplicator.exe and enter the Hydrus API key you created previously when prompted.   Linux and macos  Run the program and enter the Hydrus API key you created previously.    Example:  <pre><code>python -m hydrusvideodeduplicator --api-key=\"78d2fcc9fe1f43c5008959ed1abfe38ffedcfa127d4f051a1038e068d3e32656\"\n</code></pre> <p>To cancel any stage of processing at any time, press CTRL+C.</p> <p>You may want to cancel the first step, perceptually hashing, before it's finished in order to search for duplicates on that subset of videos that have been hashed. The next time you run the program it will continue where you left off. This may be useful for large databases that may take forever to perceptually hash.</p> <p>See the full list of options with <code>--help</code>.</p> <p>See the FAQ for more information.</p>"},{"location":"usage/#advanced-usage","title":"Advanced Usage","text":"<p>You can select certain files with queries just like Hydrus. e.g. <code>--query=\"character:batman\"</code></p> Example <pre><code>python -m hydrusvideodeduplicator --api-key=\"...\" --query=\"character:batman\"\n</code></pre>"}]}