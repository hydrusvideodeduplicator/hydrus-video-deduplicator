{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hydrus Video Deduplicator finds potential duplicate videos through the Hydrus API and marks them as potential duplicates to allow manual filtering through the Hydrus Client GUI.</p> <p>Hydrus Video Deduplicator does not modify your files. It only marks videos as <code>potential duplicates</code> through the Hydrus API so that you can personally filter them in the duplicates processing page.</p> <p>See the Hydrus documentation for how duplicates are managed in Hydrus.</p>"},{"location":"contact/","title":"Contact","text":"<p>Create an issue on GitHub for any problems/concerns. Provide as much detail as possible in your issue.</p> <p>Email <code>hydrusvideodeduplicator@gmail.com</code> for other general questions/concerns.</p> <p>Message <code>@applenanner</code> on the Hydrus Discord for other general questions/concerns.</p>"},{"location":"credits/","title":"Credits","text":"<p>Hydrus Network (DWTFYWTPL) by Hydrus dev</p> <p>Hydrus API Library (GNU AGPLv3) by cryzed</p> <p>pdq (BSD) by Meta</p> <p>vpdq (BSD) by Meta</p> <p>Big Buck Bunny, Sintel  (CC BY 3.0) clips by Blender Foundation</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#setup","title":"Setup","text":"<p>Hatch is the Python project manager for this project.</p> <p>It is used for packaging and environment management for development.</p> <p>There are hatch commands for this project are defined in the [pyproject.toml]. They are just aliases for other commands that run in specific environments.</p> <p>For example, to run the command to generate the documentation and serve it locally:</p> <pre><code>hatch run docs:serve\n</code></pre> <p><code>docs</code> is the environment and <code>build</code> is the command to run.</p> <p>For more information, see the Hatch environment documentation</p>"},{"location":"development/#useful-commands","title":"Useful commands","text":"<p>Run all tests:</p> <pre><code>hatch run test:all\n</code></pre> <p>Serve documentation locally:</p> <pre><code>hatch run docs:serve\n</code></pre> <p>Build documentation:</p> <pre><code>hatch run docs:build\n</code></pre> <p>Check code formatting (doesn't actually run formatting):</p> <pre><code>hatch run lint:format\n</code></pre> <p>Lint code:</p> <pre><code>hatch run lint:lint\n</code></pre> <p>Format code:</p> <pre><code>hatch run format:format\n</code></pre> <p>Benchmark vpdq:</p> <pre><code>hatch run benchmark:vpdq\n</code></pre>"},{"location":"development/#developing-without-hatch-not-recommended","title":"Developing without Hatch (not recommended)","text":"<p>Alternatively, if you don't want to use hatch and you know what you're doing, you can install and do development the general way.</p> <ol> <li> <p>Clone or download the repository:</p> <pre><code>git clone https://github.com/hydrusvideodeduplicator/hydrus-video-deduplicator.git\n</code></pre> </li> <li> <p>Install local editable package with pip and venv:</p> <pre><code>cd hydrus-video-deduplicator\npython3 -m venv venv\nsource venv/bin/activate # or however it's activated on your OS\npip install -e .\n</code></pre> </li> <li> <p>Now if you run <code>python3 -m hydrusvideodeduplicator</code> there should be no errors.</p> </li> </ol>"},{"location":"development/#testing","title":"Testing","text":""},{"location":"development/#testdb","title":"testdb","text":"<p>testdb is a submodule that contains the Hydrus DB and videos for integration testing purposes.</p> <p>It is a submodule to avoid bloating this repo with large media files used for testing.</p> <p>To checkout the testdb submodule:</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>Run tests with <code>hatch run test:all</code></p> <p>TODO: Explain how to run Hydrus using this DB.</p>"},{"location":"development/#git-workflow","title":"git workflow","text":"<p><code>main</code> is for releases. It must be committed to through a PR from <code>develop</code> by the project maintainer.</p> <p><code>develop</code> should have the same history as main unless it has newer commits that have not been merged. When a PR is approved to develop, changes should be squash-merged.</p> <p>Create PRs for <code>develop</code> if you want to submit changes.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-to-update","title":"How to update","text":"<p>I highly recommend backing up your dedupe database folder if it took a long time to hash/search your Hydrus files.</p> <p>I will do my best to preserve your database across upgrades, but there are no guarantees. Just back it up.</p> <p>See How to backup my dedupe database for instructions on backups.</p> <p>To upgrade:</p> <pre><code># activate your venv first\npip install hydrusvideodeduplicator --upgrade\n</code></pre>"},{"location":"faq/#can-i-safely-cancel-a-dedupe-in-progress","title":"Can I safely cancel a dedupe in progress?","text":"<p>Yes. You can safely skip any or all of the dedupe steps in progress by pressing <code>CTRL+C</code>. The next time you launch the program it will continue where you left off.</p>"},{"location":"faq/#how-to-backup-my-dedupe-database","title":"How to backup my dedupe database?","text":"<p>You can backup your dedupe database by copying the database directory somewhere safe.</p> <p>See Where are the video hashes stored? location for the database directory.</p>"},{"location":"faq/#how-does-this-work","title":"How does this work?","text":"<ol> <li> <p>First, the program will perceptually hash all your video files and store them in a database.</p> <ul> <li>Initial hashing takes longer than searching for duplicates. It will also probably get slower as it progresses because the API requests are sorted by file size.</li> </ul> </li> <li> <p>Then, the perceptual hashes are put into a data structure to make it fast to search for duplicates.</p> <ul> <li>Note: Initial search tree building may take a while, but it should be very fast on subsequent runs when new files are added.</li> </ul> </li> <li> <p>Finally, it will search the database for potential duplicates and mark them as potential duplicates in Hydrus.</p> </li> </ol> <p>You can run the program again when you add more files to find more duplicates.</p> <p>Note: You can skip any of the steps to find duplicates for only a few videos at a time. The next time you launch the program it will continue where you left off.</p>"},{"location":"faq/#where-are-the-video-hashes-stored","title":"Where are the video hashes stored?","text":"<p>Hashes are stored in an sqlite database created in an app dir to speed up processing on subsequent runs.</p> <p>On Linux, this directory is likely <code>~/.local/share/hydrusvideodeduplicator</code></p> <p>On Windows, this directory is likely <code>%USERPROFILE%\\AppData\\Local\\hydrusvideodeduplicator</code> or <code>%USERPROFILE%\\AppData\\Roaming\\hydrusvideodeduplicator</code></p> <p>On macos, this directory is likely <code>/Users/&lt;yourusername&gt;/Library/Application Support/hydrusvideodeduplicator</code></p> <p>The database directory can be set with <code>DEDUP_DATABASE_DIR</code> environment variable.</p>"},{"location":"faq/#i-have-a-big-library-how-do-i-test-this-on-just-a-few-files","title":"I have a big library. How do I test this on just a few files?","text":"<p>You can use system predicates and queries to limit your search.</p> <p>Each query will reduce the number of files you process. By default all videos/animated are processed.</p> <p>For example:</p> <p>You want to deduplicate files with these requirements:</p> <ul> <li> <p>Max of 1000 files</p> </li> <li> <p>&lt;50 MB filesize</p> </li> <li> <p>In <code>system:archive</code></p> </li> <li> <p>Has the tags <code>character:jacob</code></p> </li> <li> <p>Imported &lt; 1 hour ago</p> </li> </ul> <p>Then the arguments for the query would be:</p> <p><code>--query=\"system:filesize &gt; 10MB\" --query=\"system:limit 1000\" --query=\"system:archive\" --query=\"character:jacob\" --query=\"system:import time &lt; 1 hour\"</code></p> <p>These are the same queries as would be used in Hydrus.</p>"},{"location":"faq/#i-want-to-search-for-duplicates-without-hashing-new-video-files","title":"I want to search for duplicates without hashing new video files","text":"<p>You can either use <code>--skip-hashing</code>, press CTRL+C while perceptual hashing is running, or use a query limiting when files were imported.</p> Example query that limits import time <pre><code>--query=\"system:import time &gt; 1 day\"\n</code></pre>"},{"location":"faq/#what-kind-of-files-does-it-support","title":"What kind of files does it support?","text":"<p>Almost all video and animated files e.g. mp4, gif, apng, etc. are supported if they are supported in Hydrus.</p> <p>If you find a video that fails to perceptually hash, please create an issue on GitHub with some information about the video or message <code>@applenanner</code> on the Hydrus Discord.</p> <p>If a bad file crashes the whole program also create an issue. Skipping files is fine, but crashing is not.</p>"},{"location":"faq/#why-does-processing-slow-down-the-longer-it-runs","title":"Why does processing slow down the longer it runs?","text":"<p>The files are retrieved from Hydrus in increasing file size order. Naturally, this would also affect searching because the database is also ordered.</p> <p>If this is an issue for you and think this should be changed, please create an issue and explain why.</p>"},{"location":"faq/#i-set-the-threshold-too-low-and-now-i-have-too-many-potential-duplicates","title":"I set the threshold too low and now I have too many potential duplicates","text":"<p>While the perceptual hasher should have very few false-positives, you may accidently get too many if you change your search threshold too low using <code>--threshold</code>.</p> <p>You can reset your potential duplicates in Hydrus in duplicates processing:</p> <p></p> <p>Then, you should also reset your search cache with <code>--clear-search-cache</code> to search for duplicates from scratch.</p>"},{"location":"faq/#my-file-failed-to-hash","title":"My file failed to hash","text":"<p>If you find a video that fails to perceptually hash, please create an issue on GitHub with some information about the video or message <code>@applenanner</code> on the Hydrus Discord.</p>"},{"location":"faq/#i-have-some-weird-messages-while-perceptual-hashing","title":"I have some \"weird\" messages while perceptual hashing","text":"<p>If you get messages like this:</p> <p>VPS 0 does not exist</p> <p>SPS 0 does not exist.</p> <p>or</p> <p>deprecated pixel format used, make sure you did set range correctly</p> <p>Don't worry. These are FFmpeg logs from file decoding. They can be safely ignored.</p> <p>These messages are prevalent  with certain video codecs, namely AV1 and H.265.</p> <p>Unfortunately these obnoxious messages are not able to be silenced yet.</p> <p>But if your messages mention perceptual hashing failing then see My file failed to hash.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#windows","title":"Windows","text":""},{"location":"installation/#dependencies","title":"Dependencies","text":"<ul> <li>Python &gt;=3.10</li> </ul> <p>Run in PowerShell:</p> <pre><code>python3 -m venv venv         # Create a virtual environment somewhere to avoid system dependency conflicts\n.\\venv\\Scripts\\Activate.ps1  # Activate the virtual environment\npython3 -m pip install hydrusvideodeduplicator\n</code></pre> <p>You should now be good to go. Proceed to usage.</p> <p>Note: Any time you want to run the program again you will have to run the command to activate the virtual environment first.</p>"},{"location":"installation/#linux","title":"Linux","text":"<p>The following instructions are written for Ubuntu, but should be similar for most distros.</p>"},{"location":"installation/#dependencies_1","title":"Dependencies","text":"<ul> <li>Python &gt;=3.10</li> </ul>"},{"location":"installation/#steps","title":"Steps","text":"<ol> <li> <p>Update system packages:</p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade\n</code></pre> </li> <li> <p>Install dependencies:</p> <pre><code>sudo apt-get install -y python3-pip\n</code></pre> </li> <li> <p>Create and activate a virtual environment:</p> <pre><code>python3 -m venv venv      # Create a virtual environment to avoid system dependency conflicts\nsource venv/bin/activate  # Activate the virtual environment\n</code></pre> </li> <li> <p>Install the program:</p> <pre><code>pip install hydrusvideodeduplicator\n</code></pre> </li> </ol> <p>You should now be good to go. Proceed to usage.</p> <p>Note: Any time you want to run the program again you will have to run the command to activate the virtual environment first.</p>"},{"location":"installation/#macos","title":"macos","text":"<p>Same directions as Linux and Windows but using your preferred package manager for dependencies e.g. brew.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#basic-usage","title":"Basic usage","text":"<ol> <li> <p>Backup your Hydrus database to be safe.</p> </li> <li> <p>Enable the Hydrus Client API and create an access key with all permissions.</p> <ul> <li> <p>The program needs access to your entire database. Do NOT use blacklist/whitelist filters for the API token.</p> </li> <li> <p>https is the default for the client API URL.</p> <ul> <li>Specify your Hydrus API URL with <code>--api-url</code> if you need http<ul> <li>Ex. <code>python -m hydrusvideodeduplicator --api-url=http://localhost:45869</code></li> </ul> </li> <li>\u26a0\ufe0f SSL cert is not verified by default unless you enter the cert's file path with <code>--verify-cert</code></li> </ul> </li> <li> <p>Enable <code>allow non-local connections</code> in <code>manage services-&gt;client api</code> if you are using WSL or the connection will fail.</p> </li> </ul> </li> <li> <p>Run and enter your access key as a parameter</p> </li> </ol> <pre><code>python3 -m hydrusvideodeduplicator --api-key=\"put your Hydrus api key here\"\n</code></pre> Example <pre><code>python3 -m hydrusvideodeduplicator --api-key=\"78d2fcc9fe1f43c5008959ed1abfe38ffedcfa127d4f051a1038e068d3e32656\"\n</code></pre> <p>You can select certain files with queries just like Hydrus. e.g. <code>--query=\"character:batman\"</code></p> Example <pre><code>python3 -m hydrusvideodeduplicator --api-key=\"78d2fcc9fe1f43c5008959ed1abfe38ffedcfa127d4f051a1038e068d3e32656\" --query=\"character:batman\"\n</code></pre> <p>To cancel any stage of processing, press CTRL+C.</p> <p>You can cancel the first step, perceptual hashing, at any time to only search the duplicates that are currently hashed. You don't need to perceptually hash your entire database before you start searching.</p> <p>See the full list of options with <code>--help</code>.</p> <p>See the FAQ for more information.</p>"}]}