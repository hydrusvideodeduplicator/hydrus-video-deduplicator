name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linter:
    name: Linter and Formatter
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.14"

    - name: Install dependencies
      run: |
        python -m pip install uv
        uv venv
        uv pip install hatch
        uv pip install -e .

    - name: Lint with Ruff
      run: uv run hatch run lint:lint

    - name: Format check with black
      run: uv run hatch run lint:format
  
  unittest:
    name: Unit Test
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14', '3.x']
        os: ['ubuntu-latest', 'windows-2025', 'macos-14']
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        lfs: 'false'
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install uv
        uv venv
        uv pip install hatch

    - name: Unit test
      run: |
        uv run hatch env create test
        uv run hatch run test:all

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        lfs: 'false'
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install uv
        uv venv
        uv pip install hatch

    - name: Create benchmark env
      run: |
        uv run hatch env create benchmark

    - name: Benchmark
      run: |
        uv run hatch run benchmark:vpdq --benchmark-json "${{ matrix.python-version }}.json"

    - name: Profile
      run: |
        uv run hatch run benchmark:profile_vpdq
